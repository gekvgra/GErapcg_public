[{"path":"gekvgra.github.io/GErapcg/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"gekvgra.github.io/GErapcg/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"gekvgra.github.io/GErapcg/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"gekvgra.github.io/GErapcg/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"gekvgra.github.io/GErapcg/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"gekvgra.github.io/GErapcg/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"gekvgra.github.io/GErapcg/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"gekvgra.github.io/GErapcg/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"gekvgra.github.io/GErapcg/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"gekvgra.github.io/GErapcg/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"gekvgra.github.io/GErapcg/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"gekvgra.github.io/GErapcg/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"gekvgra.github.io/GErapcg/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"gekvgra.github.io/GErapcg/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"gekvgra.github.io/GErapcg/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"gekvgra.github.io/GErapcg/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"gekvgra.github.io/GErapcg/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"gekvgra.github.io/GErapcg/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"gekvgra.github.io/GErapcg/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"gekvgra.github.io/GErapcg/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"gekvgra.github.io/GErapcg/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"gekvgra.github.io/GErapcg/articles/example_computation.html","id":"anmerkungen","dir":"Articles","previous_headings":"","what":"Anmerkungen","title":"RA Parallelberechnung mit synthetischen Daten","text":"Das vorliegende Skript implementiert die Berechnung des Risikoausgleichs, wie sie SORA PCG implementiert ist. Zu Demonstrations- und Testzwecken beinhaltet das Paket einen Datensatz mit synthetischen Daten. Entsprechend werden Berechnungsergebnisse nicht mit denjenigen aus SORA PCG übereinstimmen.","code":""},{"path":"gekvgra.github.io/GErapcg/articles/example_computation.html","id":"lade-dependencies","dir":"Articles","previous_headings":"","what":"Lade dependencies","title":"RA Parallelberechnung mit synthetischen Daten","text":"","code":"library(dplyr) library(data.table) library(GErapcg) library(GEviz)"},{"path":"gekvgra.github.io/GErapcg/articles/example_computation.html","id":"konfiguration","dir":"Articles","previous_headings":"","what":"Konfiguration","title":"RA Parallelberechnung mit synthetischen Daten","text":"","code":"# Individualdaten: wenn NULL, werden die im Package integrierten, synthetischen  # Testdaten verwendet. Siehe hierzu Disclaimer im README sowie ?test_data ind_data <- NULL  # PCG Liste: entweder ein data.frame oder eine Pfadangabe zu einer .xlsx-Datei # Wenn NULL, wird die im Package integrierte PCG Liste zum Ausgleichsjahr 2022  # verwendet.  pcg_list <- NULL  # Ausgleichsjahr: wenn ind_data NULL ist, werden die Jahresangaben in den # Testdaten entsprechend rekodiert. Year <- 2022  # Angabe, ob Zwischenresultate bereinigt werden sollen Clean_Steps <- FALSE"},{"path":"gekvgra.github.io/GErapcg/articles/example_computation.html","id":"parallelberechnung","dir":"Articles","previous_headings":"","what":"Parallelberechnung","title":"RA Parallelberechnung mit synthetischen Daten","text":"Alternativ kann die Parallelberechnung auch mit der Funktion GErapcg::compute_ra berechnet werden.","code":"source(system.file(\"script/1-Setup.R\", package = \"GErapcg\")) source(system.file(\"script/2-Pcg-List.R\", package = \"GErapcg\")) source(system.file(\"script/3-Grouping-Hierarchy.R\", package = \"GErapcg\")) source(system.file(\"script/4-Preparation.R\", package = \"GErapcg\")) source(system.file(\"script/5-Berechnung.R\", package = \"GErapcg\")) source(system.file(\"script/6-PCG-Nachweis.R\", package = \"GErapcg\"))"},{"path":[]},{"path":"gekvgra.github.io/GErapcg/articles/example_computation.html","id":"übersicht-berechnungsergebnisse-für-versicherer-1-in-kanton-aargau","dir":"Articles","previous_headings":"Beispiele","what":"Übersicht Berechnungsergebnisse für Versicherer 1 in Kanton Aargau","title":"RA Parallelberechnung mit synthetischen Daten","text":"Übersicht Saldo für Versicherer 1, Kanton Aargau","code":"saldo_ag_1 <- saldo[BagNr == 1 & Kanton == \"AG\"] %>%    select(-a_tilde_kr, -saldo_ohne_D, -D_k) %>%    rename(     `Aufenthalt Vorjahr` = Aufenthalt_Vj,      Monate = Monate_T,     `Zuschlag Risikogruppe (Total)` = a_bkr_sum,     `Zuschlag PCG (Total)` = pcg_sum_bkr,     `Entlastung junge Erwachsene` = D_total,     `Saldo` = saldo_mit_D   )"},{"path":"gekvgra.github.io/GErapcg/articles/example_computation.html","id":"übersicht-der-pcg-ansätze-und-anzahl-pro-versicherer","dir":"Articles","previous_headings":"","what":"Übersicht der PCG-Ansätze und Anzahl pro Versicherer","title":"RA Parallelberechnung mit synthetischen Daten","text":"Übersicht PCG Ansätze","code":"nachweis <- pcg_nachweis[   as.data.table(pcg_coef), on = .(pcg) ][   ,`:=`(Versicherer = paste0(\"Versicherer\", BagNr)) ] %>%   dcast(     Jahr + pcg + pcg_ansatz ~ Versicherer, value.var = \"pcg\",     fun.aggregate = length   ) %>%    rowwise() %>%   mutate(     `Total (Anzahl)` = sum(c_across(starts_with(\"Versicherer\"))),   ) %>%   mutate(`Total (Zuschlag)` = pcg_ansatz * `Total (Anzahl)`) %>%    rename(PCG = pcg, `PCG Ansatz` = pcg_ansatz) %>%    select(-Jahr) %>%    arrange(desc(`Total (Zuschlag)`))"},{"path":"gekvgra.github.io/GErapcg/articles/example_computation.html","id":"weitere-informationen","dir":"Articles","previous_headings":"","what":"Weitere Informationen","title":"RA Parallelberechnung mit synthetischen Daten","text":"Webbereich GE KVG Risikoausgleich Berechnungsformel für den Risikoausgleich mit PCG ab 2020","code":""},{"path":"gekvgra.github.io/GErapcg/articles/pcg_grouping_and_hierarchy.html","id":"anmerkungen","dir":"Articles","previous_headings":"","what":"Anmerkungen","title":"Zuweisung der PCG und Hierarchisierung","text":"Zu Demonstrations- und Testzwecken beinhaltet das Paket einen Datensatz mit synthetischen Daten. Entsprechend werden Berechnungsergebnisse nicht mit denjenigen aus SORA PCG übereinstimmen.","code":""},{"path":"gekvgra.github.io/GErapcg/articles/pcg_grouping_and_hierarchy.html","id":"zuweisung-von-pcg","dir":"Articles","previous_headings":"","what":"Zuweisung von PCG","title":"Zuweisung der PCG und Hierarchisierung","text":"Der Risikoausgleich berücksichtigt, dass bestimmte Krankheitsbilder mit einem höheren Risiko verbunden sind. Um dieses abbilden zu können, wird den versicherten Personen abhängig von den Medikamenten, die sie im Vorjahr bezogen haben, eine Patientenkostengruppe (PCG) zugewiesen. Grundvoraussetzung ist, dass die Medikamente im Abgabezeitpunkt auf der Spezialitätenliste vermerkt waren, dass sie im Berechnungsjahr der PCG-Liste einer PCG zugeordnet waren, und dass die verabreichte Menge einen festgelegten Schwellenwert überschreitet (Art. 5 VORA). Die Schwellenwerte wurden vom EDI auf 3 Packungen für die PCG Krebs (KRE) sowie Krebs Komplex und 180 standardisierte Tagesdosen (DDD) für alle übrigen PCG festgelegt (Art. 4 VORA-EDI).","code":""},{"path":"gekvgra.github.io/GErapcg/articles/pcg_grouping_and_hierarchy.html","id":"implementierung","dir":"Articles","previous_headings":"Zuweisung von PCG","what":"Implementierung","title":"Zuweisung der PCG und Hierarchisierung","text":"Im Paket GErapcg ist die Zuweisung der PCG der Funktion GErapcg::pcg_grouping implementiert. Bei den beiden notwendigen Eingabeobjekten handelt es sich um die Vorjahresdaten (Jahr T-1) mit Zeithorizont 26 Monaten und die mit GErapcg::pcg_import aufbereitete PCG Liste für das Ausgleichsjahr (Jahr T). Für jede versicherte Person werden die verabreichten Medikamente ihrer Menge aggregiert und über die GTIN-Nummer einer PCG zugeordnet. Letztlich werden sämtliche Zeilen, bei denen der Schwellenwert nicht überschritten wurde, eliminiert. Das Output Objekt ist somit eine Aufführung sämtlicher versicherten Personen, denen eine PCG zugeordnet werden kann. pcg_grouping: Zuweisung der PCG zu Versicherten","code":"Jahr_T <- 2022 Jahr_T_1 <- Jahr_T - 1 Jahr_T_2 <- Jahr_T - 2  ind_data <- data.table::as.data.table(test_data)[   ,   `:=`(     Jahr = Jahr + (Jahr_T - max(test_data$Jahr)),     Geburtsjahr = Geburtsjahr + (Jahr_T - max(test_data$Jahr))   ) ]  #?pcg_grouping pcg_liste <- GErapcg::pcg_import(test_pcglist)  pcg_grouped <- GErapcg::pcg_grouping(   data_input = ind_data[Jahr == Jahr_T_1 & MonateHorizont == 26],   pcg_liste = pcg_liste ) ## `summarise()` has grouped output by 'Jahr', 'MonateHorizont', 'AhvNr'. You can ## override using the `.groups` argument."},{"path":"gekvgra.github.io/GErapcg/articles/pcg_grouping_and_hierarchy.html","id":"hierarchisierung","dir":"Articles","previous_headings":"","what":"Hierarchisierung","title":"Zuweisung der PCG und Hierarchisierung","text":"Grundsätzlich können versicherten Personen keine, eine oder mehrere PCG zugeordnet werden. Wo mehrere PCGs dasselbe oder ein verwandtes gesundheitliches Problem betreffen, kann das EDI allerdings Hierarchisierungen unter den PCG vorsehen (Art. 4 VORA und Art. 3 VORA-EDI). Diese wirken sich folgendermassen auf die PCG-Zuweisung aus: Personen mit den PCG Diabetes Typ 1 (DM1) und Diabetes Typ 2 (DM2) werden nach der Hierarchisierung der PCG DM1 zugewiesen. Personen mit den PCG Krebs (KRE) und Krebs Komplex (KRK) werden nach der Hierarchisierung der PCG KRK zugewiesen. Relevant sind ferner nicht eigenständige PCGs im Sinne von Art. 4 Abs. 1ter VORA und Art. 2 VORA-EDI. Aktuell betrifft dies lediglich die PCG Hypertonie, welche zur Bildung der kombinierten PCG Diabetes Typ 2 mit Bluthochdruck (DM2+hyp) benötigt wird, selber aber nicht der Berechnung des Risikoausgleichs berücksichtigt wird. Übersicht der Hierarchisierungsregeln aus Art. 3. VORA-EDI","code":""},{"path":"gekvgra.github.io/GErapcg/articles/pcg_grouping_and_hierarchy.html","id":"implementierung-1","dir":"Articles","previous_headings":"Hierarchisierung","what":"Implementierung","title":"Zuweisung der PCG und Hierarchisierung","text":"Die Art. 3 VORA-EDI definieren Hierarchisierungsregeln sind im Package der Datei “extdata/hierarchy.csv” hinterlegt. Die Hierarchisierung sich ist der Funktion GErapcg::pcg_hierarchy implementiert. Das Eingabeobjekt entspricht dem Output von GErapcg::pcg_grouping. pcg_hierarchy: Hierarchisierung der PCG","code":"#?GErapcg::pcg_hierarchy hierarchy <- GErapcg::pcg_hierarchy(pcg_grouped, direction = \"wide\")"},{"path":"gekvgra.github.io/GErapcg/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Magnus Vieten. Author. Yannick Schwarz. Author, maintainer. Thomas Fischer. Author.","code":""},{"path":"gekvgra.github.io/GErapcg/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Vieten M, Schwarz Y, Fischer T (2024). GErapcg: Calculation swiss risk equalization PCG (RA PCG). R package version 1.2.0, https://urban-disco-7k3jo92.pages.github.io/, https://www.kvg.org/de/risikoausgleich-_content—1–1047.html.","code":"@Manual{,   title = {GErapcg: Calculation of the swiss risk equalization with PCG (RA PCG)},   author = {Magnus Vieten and Yannick Schwarz and Thomas Fischer},   year = {2024},   note = {R package version 1.2.0, https://urban-disco-7k3jo92.pages.github.io/},   url = {https://www.kvg.org/de/risikoausgleich-_content---1--1047.html}, }"},{"path":[]},{"path":"gekvgra.github.io/GErapcg/index.html","id":"voraussetzungen","dir":"","previous_headings":"","what":"Voraussetzungen","title":"Calculation of the swiss risk equalization with PCG (RA PCG)","text":"Die Parallelberechnung ist der Programmiersprache R geschrieben und eine Installation von R, RStudio sowie der benötigten R Pakete ist somit notwendig. Ansonsten sind keine weiteren Kenntnisse notwendig.","code":""},{"path":"gekvgra.github.io/GErapcg/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Calculation of the swiss risk equalization with PCG (RA PCG)","text":"","code":"# Produktive Version remotes::install_github(\"https://github.com/gekvgra/GErapcg_public.git\")"},{"path":"gekvgra.github.io/GErapcg/index.html","id":"verwendung","dir":"","previous_headings":"","what":"Verwendung","title":"Calculation of the swiss risk equalization with PCG (RA PCG)","text":"Die Implementierung der Parallelberechnung umfasst 6 Rscripts: Setup und Laden der Individualdaten Laden der PCG-Liste Zuordnung der PCG zu den Individualdaten und Hierarchisierung Preprocessing Berechnung PCG Nachweis Um die Berechnung durchzuführen gibt es zwei Möglichkeiten. Die schnellere davon ist die Hilfsfunktion compute_ra. Alternativ liegt dem Package eine RMarkdown-Vorlage mit dem Namen GE KVG Parallelberechnung Risikoausgleich bei. Ein neues, auf dieser Vorlage basierendes Dokument kann über den folgenden Ablauf erzeugt werden: File > New File > RMarkdown… > Template > Parallelberechnung Um die zugehörigen Rscripts genauer zu inspizieren können die auskommentierten Zeilen beginnend mit file.edit ausgeführt werden. Die im Code verwendeten Variablennamen folgen dabei im wesentlichen der Nomenklatur, die der Publikation Berechnungsformel für den Risikoausgleich mit PCG ab 2020 verwendet wird.","code":""},{"path":"gekvgra.github.io/GErapcg/index.html","id":"wichtig","dir":"","previous_headings":"","what":"WICHTIG","title":"Calculation of the swiss risk equalization with PCG (RA PCG)","text":"Die im Package enthaltenen Daten enthalten zufällig generierte Daten mit 1000 Zeilen für jeden Kanton für drei Versicherer. Die Ausgabeobjekte aus diesen zufällig generierten Daten sind also eindeutig nicht identisch mit den Ausgabeobjekten von SORA PCG. Wenn die GE KVG jedoch die Originaldaten des Risikoausgleichs mit diesem Package verwendet, sind die Ergebnisse identisch mit den Ergebnissen von SORA PCG. Für Dritte gibt es keine Möglichkeit diese Ergebnisse zu reproduzieren, da die Originaldaten per Gesetz nur der GE KVG und dem BAG zugänglich sind (siehe VORA Art. 26). Bei Fragen oder Unklarheiten stehen wir Ihnen gerne zur Verfügung. sora@kvg.org","code":""},{"path":"gekvgra.github.io/GErapcg/reference/aufenthalt_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"aufenthalt_fun — aufenthalt_fun","title":"aufenthalt_fun — aufenthalt_fun","text":"Shifts hospitalization status Aufenthalt: J/N AhvNr data set another. AhvNr contained source data, assigns N target. Used RA calculation create variable Aufenthalt_Vj ('previous year's hospitalization status').","code":""},{"path":"gekvgra.github.io/GErapcg/reference/aufenthalt_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"aufenthalt_fun — aufenthalt_fun","text":"","code":"aufenthalt_fun(dt_T, dt_T_1)"},{"path":"gekvgra.github.io/GErapcg/reference/aufenthalt_fun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"aufenthalt_fun — aufenthalt_fun","text":"dt_T Target shift hospitalzation status. data.table featuring individual insurant data according naming data type standards used data set test_data. dt_T_1 Source shift hospitalization status. data.table featuring individual insurant data according naming data type standards used data set test_data.","code":""},{"path":"gekvgra.github.io/GErapcg/reference/aufenthalt_fun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"aufenthalt_fun — aufenthalt_fun","text":"data.table featuring entries dt_T variable Aufenthalt_Vj Aufentalt_Vj hospitalization status dt_T_1 assigned dt_T AhvNr","code":""},{"path":[]},{"path":"gekvgra.github.io/GErapcg/reference/aufenthalt_fun.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"aufenthalt_fun — aufenthalt_fun","text":"Magnus Vieten, Yannick Schwarz","code":""},{"path":"gekvgra.github.io/GErapcg/reference/aufenthalt_fun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"aufenthalt_fun — aufenthalt_fun","text":"","code":"if (FALSE) { # \\dontrun{ aufenthalt_fun( test_data[Jahr == 2019 & MonateHorizont == 14], test_data[Jahr == 2018 & MonateHorizont == 26]) } # }"},{"path":"gekvgra.github.io/GErapcg/reference/compute_ra.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Risk Adjustment calculations — compute_ra","title":"Run Risk Adjustment calculations — compute_ra","text":"Runs steps risk adjustment calculations returns results named list.","code":""},{"path":"gekvgra.github.io/GErapcg/reference/compute_ra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Risk Adjustment calculations — compute_ra","text":"","code":"compute_ra(   Year,   ind_data = NULL,   pcg_list = NULL,   Clean_Steps = FALSE,   export_objects = \"all\" )"},{"path":"gekvgra.github.io/GErapcg/reference/compute_ra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Risk Adjustment calculations — compute_ra","text":"Year integer specifying year risk adjustment ind_data data.frame data.table object. Uses synthetic test data included package NULL. pcg_list Either path .xlsx PCG list, data.frame/data.table Uses public PCG list year 2022 NULL. Clean_Steps Boolean. Whether clean intermediate results. export_objects character vector naming objects export. default, objects exported","code":""},{"path":"gekvgra.github.io/GErapcg/reference/compute_ra.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Risk Adjustment calculations — compute_ra","text":"list objects specified export_objects.","code":""},{"path":"gekvgra.github.io/GErapcg/reference/compute_ra.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Run Risk Adjustment calculations — compute_ra","text":"Magnus Vieten, Yannick Schwarz, Thomas Fischer","code":""},{"path":"gekvgra.github.io/GErapcg/reference/compute_ra.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Risk Adjustment calculations — compute_ra","text":"","code":"if (FALSE) { # \\dontrun{ res <- compute_ra(2022, Clean_Steps = TRUE) } # }"},{"path":"gekvgra.github.io/GErapcg/reference/globals.html","id":null,"dir":"Reference","previous_headings":"","what":"Define Global Variables — globals","title":"Define Global Variables — globals","text":"Round unbound variables, note 'visible binding global variable' checking package disappears.","code":""},{"path":"gekvgra.github.io/GErapcg/reference/globals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define Global Variables — globals","text":"","code":"globals()"},{"path":[]},{"path":"gekvgra.github.io/GErapcg/reference/make_age_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Make age groups — make_age_groups","title":"Make age groups — make_age_groups","text":"Make age groups accordance Art. 2 VORA 19.10.2016 (Release 1.1.2022).","code":""},{"path":"gekvgra.github.io/GErapcg/reference/make_age_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make age groups — make_age_groups","text":"","code":"make_age_groups(DT, style = \"normal\")"},{"path":"gekvgra.github.io/GErapcg/reference/make_age_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make age groups — make_age_groups","text":"DT data.table containing variables \"Jahr\" \"Geburtsjahr\" (type integer). style Designate output format. \"normal\" gives type \"36\", \"sora\" gives type \"36-40\".","code":""},{"path":"gekvgra.github.io/GErapcg/reference/make_age_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make age groups — make_age_groups","text":"Adds variable \"Altersklasse\" input data.table","code":""},{"path":[]},{"path":"gekvgra.github.io/GErapcg/reference/make_age_groups.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make age groups — make_age_groups","text":"Yannick Schwarz","code":""},{"path":"gekvgra.github.io/GErapcg/reference/make_age_groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make age groups — make_age_groups","text":"","code":"make_age_groups(data.table::data.table(Jahr = 2021, Geburtsjahr = 1962)) #>     Jahr Geburtsjahr Altersklasse #>    <num>       <num>       <char> #> 1:  2021        1962           56"},{"path":"gekvgra.github.io/GErapcg/reference/pcg_grouping.html","id":null,"dir":"Reference","previous_headings":"","what":"PCG Grouping — pcg_grouping","title":"PCG Grouping — pcg_grouping","text":"Groups individual data PCGs","code":""},{"path":"gekvgra.github.io/GErapcg/reference/pcg_grouping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PCG Grouping — pcg_grouping","text":"","code":"pcg_grouping(data_input, pcg_liste, inter_returns = NULL)"},{"path":"gekvgra.github.io/GErapcg/reference/pcg_grouping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PCG Grouping — pcg_grouping","text":"data_input data.table data.frame featuring RA individual data according naming data type standards used PB. renaming use function GEPack::sora_naming. pcg_liste data.table data.frame PCG-list character vector path excel file. inter_returns Character vector return objects intermediate steps function. Possible values \"data_input\", \"ddd_groupings\", \"input_fun\", \"last_step\", \"pcg_gtin\", \"pcg_li\", \"pcg_li_all\", \"pcg_liste\", \"pcg_pharm\", \"pcg_threshold\", \"show_all_steps\".","code":""},{"path":"gekvgra.github.io/GErapcg/reference/pcg_grouping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PCG Grouping — pcg_grouping","text":"data.table containing Jahr Data year MonateHorizont Horizon data status, either 14, 26 NA AhvNr Pseudo SSN Geburtsjahr Year birthday - used AhvNr warrant identification pcg Grouped PCG","code":""},{"path":"gekvgra.github.io/GErapcg/reference/pcg_grouping.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"PCG Grouping — pcg_grouping","text":"Magnus Vieten, Yannick Schwarz","code":""},{"path":"gekvgra.github.io/GErapcg/reference/pcg_grouping.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PCG Grouping — pcg_grouping","text":"","code":"if (FALSE) { # \\dontrun{ pcg_grouping(   data_input = some_RA_IndData_object,   pcg_liste = \"path/to/prepped/pcg_list.xlsx\" ) } # }"},{"path":"gekvgra.github.io/GErapcg/reference/pcg_hierarchy.html","id":null,"dir":"Reference","previous_headings":"","what":"PCG Hierarchisation — pcg_hierarchy","title":"PCG Hierarchisation — pcg_hierarchy","text":"Apply hierarchy grouped PCG data. Application accords Art. 2 & 3 VORA-EDI","code":""},{"path":"gekvgra.github.io/GErapcg/reference/pcg_hierarchy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PCG Hierarchisation — pcg_hierarchy","text":"","code":"pcg_hierarchy(data_input, direction, display_all = FALSE, display_hyp = FALSE)"},{"path":"gekvgra.github.io/GErapcg/reference/pcg_hierarchy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PCG Hierarchisation — pcg_hierarchy","text":"data_input data.table grouped PCG data necessary variables AhvNr, Geburtsjahr, pcg. direction Character vector determines output dimensions. \"wide\" returns dummy matrix output, \"long\" returns long format output. display_all Boolean, whether return variables, even corresponding PCG entries exist. Default: FALSE. display_hyp Logical default FALSE. TRUE non-independent PCG \"hyp\" treated independent (also still combined DM2 DM2hyp).","code":""},{"path":"gekvgra.github.io/GErapcg/reference/pcg_hierarchy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PCG Hierarchisation — pcg_hierarchy","text":"data.table containing AhvNr Pseudo SSN Geburtsjahr Year birthday - used AhvNr warrant identification pcg Grouped PCG","code":""},{"path":[]},{"path":"gekvgra.github.io/GErapcg/reference/pcg_hierarchy.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"PCG Hierarchisation — pcg_hierarchy","text":"Magnus Vieten, Yannick Schwarz","code":""},{"path":"gekvgra.github.io/GErapcg/reference/pcg_hierarchy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PCG Hierarchisation — pcg_hierarchy","text":"","code":"if (FALSE) { # \\dontrun{ pcg_hierarchy(   data_input = grouped_pcg_dt,   pcg_liste = \"path/to/prepped/pcg_list.xlsx\",   direction = \"wide\",   display_all = TRUE,   display_hyp = TRUE ) } # }"},{"path":"gekvgra.github.io/GErapcg/reference/pcg_import.html","id":null,"dir":"Reference","previous_headings":"","what":"Import PCG list — pcg_import","title":"Import PCG list — pcg_import","text":"Imports modifies PCG list provided BAG used RA calculation.","code":""},{"path":"gekvgra.github.io/GErapcg/reference/pcg_import.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import PCG list — pcg_import","text":"","code":"pcg_import(   input,   export_path = NULL,   pcg_kurzname_col = 1,   gtin_col = 4,   pharmacode_col = 5,   pharmacode_ddd_col = 7,   schwellenwert_ddd_col = 8,   schwellenwert_packungen_col = 9 )"},{"path":"gekvgra.github.io/GErapcg/reference/pcg_import.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import PCG list — pcg_import","text":"input data.table data.frame PCG-list character vector path excel file. export_path Character vector path excel file output generated. pcg_kurzname_col, gtin_col, pharmacode_col, pharmacode_ddd_col, schwellenwert_ddd_col, schwellenwert_packungen_col Integer vector column number PCG-Kurzname, GTIN, Pharmacode, Anzahl DDD pro Packung, DDD-Schwellenwert, Packungen-Schwellenwert.","code":""},{"path":"gekvgra.github.io/GErapcg/reference/pcg_import.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import PCG list — pcg_import","text":"data.frame modified PCG list used upload SORA PCG PB calculation.","code":""},{"path":"gekvgra.github.io/GErapcg/reference/pcg_import.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import PCG list — pcg_import","text":"Magnus Vieten, Yannick Schwarz","code":""},{"path":"gekvgra.github.io/GErapcg/reference/pcg_import.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import PCG list — pcg_import","text":"","code":"if (FALSE) { # \\dontrun{ pcg_import(test_pcglist) pcg_import(\"path/to/pcg_list.xlsx\") } # }"},{"path":"gekvgra.github.io/GErapcg/reference/rg_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"create RA risk group grid — rg_grid","title":"create RA risk group grid — rg_grid","text":"Running rg_grid() returns data.table 1560 risk groups featured current RA.","code":""},{"path":"gekvgra.github.io/GErapcg/reference/rg_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create RA risk group grid — rg_grid","text":"","code":"rg_grid(children = FALSE, kantonal = TRUE)"},{"path":"gekvgra.github.io/GErapcg/reference/rg_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create RA risk group grid — rg_grid","text":"children Logical default FALSE. TRUE age group \"0-18\" added grid. kantonal Logical default TRUE Swiss cantons added grid. FALSE returns risk group grid without cantons.","code":""},{"path":"gekvgra.github.io/GErapcg/reference/rg_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create RA risk group grid — rg_grid","text":"data.table containing combinations Kanton 26 swiss cantons Altersklasse 15 age groups (16 children = T) Geschlecht M/F Aufenthalt J/N dummy variable indicating whether person hospitalized least 3 consecutive nights","code":""},{"path":[]},{"path":"gekvgra.github.io/GErapcg/reference/rg_grid.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"create RA risk group grid — rg_grid","text":"Magnus Vieten, Yannick Schwarz","code":""},{"path":"gekvgra.github.io/GErapcg/reference/rg_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create RA risk group grid — rg_grid","text":"","code":"rg_grid() #>       Kanton Altersklasse Geschlecht Aufenthalt #>       <char>       <char>     <char>     <char> #>    1:     AG        19-25          F          J #>    2:     AG        19-25          F          N #>    3:     AG        19-25          M          J #>    4:     AG        19-25          M          N #>    5:     AG        26-30          F          J #>   ---                                           #> 1556:     ZH        86-90          M          N #> 1557:     ZH          91+          F          J #> 1558:     ZH          91+          F          N #> 1559:     ZH          91+          M          J #> 1560:     ZH          91+          M          N"},{"path":"gekvgra.github.io/GErapcg/reference/sora_datatype.html","id":null,"dir":"Reference","previous_headings":"","what":"Make the same datatypes as in SORA PCG — sora_datatype","title":"Make the same datatypes as in SORA PCG — sora_datatype","text":"Make datatypes SORA PCG","code":""},{"path":"gekvgra.github.io/GErapcg/reference/sora_datatype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make the same datatypes as in SORA PCG — sora_datatype","text":"","code":"sora_datatype(data, Ahv_Char = TRUE)"},{"path":"gekvgra.github.io/GErapcg/reference/sora_datatype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make the same datatypes as in SORA PCG — sora_datatype","text":"data data.table object. Ahv_Char Logical TRUE AhvNr character vector FALSE numeric vector.","code":""},{"path":"gekvgra.github.io/GErapcg/reference/test_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Test Data for Risk Adjustment — test_data","title":"Test Data for Risk Adjustment — test_data","text":"dataset containing randomly generated data 1000 rows canton three insurers.","code":""},{"path":"gekvgra.github.io/GErapcg/reference/test_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test Data for Risk Adjustment — test_data","text":"","code":"test_data"},{"path":"gekvgra.github.io/GErapcg/reference/test_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Test Data for Risk Adjustment — test_data","text":"data.table 15 variables 295'023 rows. BagNr Integer BAG-Nr. Jahr Integer year data. MonateHorizont Integer months since first day Jahr. AhvNr Numeric 13 digits representing AHV-Nr. individual. first three digits 756. next digit represents special test case 0 randomly generated individual 9. Kanton Character canton individual. Geburtsjahr Numeric year birth. Geschlecht Character sex. Gtin Numeric 13 digits. Pharmacode Numeric 5 7 digits. Packungen Numeric max. 2 decimals (rounded). Monate Numeric max. 2 decimals (rounded). Kosten Numeric max. 2 decimals (rounded). Kobe Numeric max. 2 decimals (rounded). LinieNr Numeric line number uploaded csv-file.","code":""},{"path":"gekvgra.github.io/GErapcg/reference/test_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Test Data for Risk Adjustment — test_data","text":"See Testset_Generator.git","code":""},{"path":"gekvgra.github.io/GErapcg/reference/test_data.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Test Data for Risk Adjustment — test_data","text":"data provided package randomly generated 1000 rows canton three insurers. randomly generated data serves user testing purposes generating final invoices, according SORA PCG. output objects randomly generated data thus clearly output objects SORA PCG. However GE KVG using original data provided insurers within package results output objects SORA PCG. third party possibility reproduce results law way get original data provided insurers. original data accessible law GE KVG BAG (see VORA Art. 26).","code":""},{"path":"gekvgra.github.io/GErapcg/reference/test_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test Data for Risk Adjustment — test_data","text":"","code":"data(\"test_data\")"},{"path":"gekvgra.github.io/GErapcg/reference/test_pcglist.html","id":null,"dir":"Reference","previous_headings":"","what":"PCG List 2022 — test_pcglist","title":"PCG List 2022 — test_pcglist","text":"dataset valid PCG publicly provided BAG. Note dataset missing several columns required parallel computation script. Hence data processed using function GErapcg::pcg_import","code":""},{"path":"gekvgra.github.io/GErapcg/reference/test_pcglist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PCG List 2022 — test_pcglist","text":"","code":"test_pcglist"},{"path":"gekvgra.github.io/GErapcg/reference/test_pcglist.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PCG List 2022 — test_pcglist","text":"data.table 7 variables 5'972 rows. PCG-Kurzname Character shortnames PCG PCG-Name Character fullnames PCG ATC-Code Character ATC Codes GTIN Numeric 13 digits. Pharmacode Numeric 5 7 digits. Arzneimittel Character description drug Anzahl.DDD.pro.Packungen Integer daily designated doses (DDD) drug per package","code":""},{"path":"gekvgra.github.io/GErapcg/reference/test_pcglist.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"PCG List 2022 — test_pcglist","text":"https://www.bag.admin.ch/bag/de/home/versicherungen/krankenversicherung/krankenversicherung-versicherer-aufsicht/risikoausgleich.html","code":""},{"path":"gekvgra.github.io/GErapcg/reference/test_pcglist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PCG List 2022 — test_pcglist","text":"","code":"data(\"test_pcglist\")"},{"path":"gekvgra.github.io/GErapcg/reference/teuerung_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"Teuerung — teuerung_fun","title":"Teuerung — teuerung_fun","text":"Calculates cost increase ('Niveauteuerung pro Kanton') used extrapolation factor risk equalization. Derivation see: Berechnungsformeln fuer den Risikoasugleich mit PCG ab 2020, Section B.","code":""},{"path":"gekvgra.github.io/GErapcg/reference/teuerung_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teuerung — teuerung_fun","text":"","code":"teuerung_fun(dt_T_14, dt_T_1_14)"},{"path":"gekvgra.github.io/GErapcg/reference/teuerung_fun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teuerung — teuerung_fun","text":"dt_T_14 data.table featuring individual insurance data according naming data type standards used data set test_data. dt_T_1_14 data.table featuring individual insurance data according naming data type standards used data set test_data.","code":""},{"path":"gekvgra.github.io/GErapcg/reference/teuerung_fun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Teuerung — teuerung_fun","text":"data.table containing Kanton Swiss canton pi_Niv_k Total cost increase component divided structural cost increase component ('Niveateuerung') pi_Str_k1 Structural cost increase component pi_Ges_k1 Total cost increase component","code":""},{"path":[]},{"path":"gekvgra.github.io/GErapcg/reference/teuerung_fun.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Teuerung — teuerung_fun","text":"Magnus Vieten, Yannick Schwarz","code":""},{"path":"gekvgra.github.io/GErapcg/reference/teuerung_fun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teuerung — teuerung_fun","text":"","code":"if (FALSE) { # \\dontrun{ pcg_grouping(data_input = some_RA_IndData_object, pcg_liste = \"path/to/prepped/pcg_list.xlsx\") } # }"},{"path":"gekvgra.github.io/GErapcg/reference/vw_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"Versichererwechsler — vw_fun","title":"Versichererwechsler — vw_fun","text":"Returns status insurance change VW AhvNr two RA data sets. See determination rules Benutzeranleitung SORA PCG, Kap. 10.","code":""},{"path":"gekvgra.github.io/GErapcg/reference/vw_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Versichererwechsler — vw_fun","text":"","code":"vw_fun(T_1_26, T_14)"},{"path":"gekvgra.github.io/GErapcg/reference/vw_fun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Versichererwechsler — vw_fun","text":"T_1_26 data.table featuring RA individual data according naming data type standards used RA. 1st component comparison ('previous year') T_14 data.table featuring RA individual data according naming data type standards used RA. 2nd component comparison.","code":""},{"path":"gekvgra.github.io/GErapcg/reference/vw_fun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Versichererwechsler — vw_fun","text":"data.table containing BagNr Integer BAG-Nr. AhvNr Pseudo SSN Geburtsjahr Year birthday - used AhvNr warrant identification VW J/N dummy variable indicating status insurance change","code":""},{"path":"gekvgra.github.io/GErapcg/reference/vw_fun.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Versichererwechsler — vw_fun","text":"Magnus Vieten, Yannick Schwarz","code":""},{"path":"gekvgra.github.io/GErapcg/reference/vw_fun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Versichererwechsler — vw_fun","text":"","code":"if (FALSE) { # \\dontrun{ vw_fun(T_1_26_auf, T_14_auf) } # }"}]
